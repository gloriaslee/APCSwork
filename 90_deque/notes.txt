Team BrainForked (Gloria Lee, Jack Chen, John Gupta-She)
APCS pd8
HW91: Deque the Halls
2022-04-12t
time spent: 0.5  hr

DISCO:
  Benefits of creating a prioritized todo list:
  - grow code incrementally. tackle the simplest tasks before 
  more complex ones
  - visualize workflow
  - encapsulation diagrams help decide workflow/remove confusion once coding starts.
  We decided to use a linked list because it offered constant add and remove given a tail and a head pointer.
  
As for to do list order, we decided to address addFirst and addLast as our first objective because they were the most crucial to the deque. without them, there would be no pushing onto the deck, and therefore any other methods would have no use (except for isEmpty)

We saved newer methods that we did not ahve previous exposure to such as removeFirstOccurrence for last, although these methods were all just pass thru functionality upon further analysis.

QCC:
  - worth it to consider an arraylist deque? (no) (eh...) (probably not unless we do a little optimization)
  - why the peekFirst() and peekLast() symbol not found errors at first? (we used peekfirst and peeklast in the remove methods and it created that error)
  - should we use removeFirstOccurrence() and removeLastOccurrence(), since they are in the API but they mess with stuff beyond just the first and last nodes.
